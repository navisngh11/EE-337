C51 COMPILER V9.54   LCD                                                                   09/13/2015 15:31:37 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.l
                    -st) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          /**
   2           LCD HOMEWORK , LABWORK XX
   3           */
   4          
   5          /* @section  I N C L U D E S */
   6          #include "at89c5131.h"
   7          #define LCD_data  P2                // LCD Data port
   8          
   9          //Function Declarations
  10          void LCD_Init();
  11          void LCD_DataWrite(char dat);
  12          void LCD_CmdWrite(char cmd);
  13          void LCD_WriteString(char * str, unsigned char len);
  14          void LCD_Ready();
  15          void sdelay(int delay);
  16          void delay_ms(int delay);
  17          
  18          sbit CS_BAR = P1^4;                 // Chip Select for the ADC
  19          sbit LCD_rs = P0^0;                 // LCD Register Select
  20          sbit LCD_rw = P0^1;                 // LCD Read/Write
  21          sbit LCD_en = P0^2;                 // LCD Enable
  22          sbit LCD_busy = P2^7;               // LCD Busy Flag
  23          
  24          //Global Variables
  25          bit transmit_completed= 0;          // To check if spi data transmit is complete
  26          char serial_data, data_save_high, data_save_low;  
  27          
  28          void main(void)
  29          {
  30   1        P2 = 0x00;                      // Make Port 2 output 
  31   1        LCD_Init();
  32   1        while(1)                      // endless  
  33   1        {
  34   2          /* Code for displaying "Hello World"
  35   2             on the LCD to be written here */    
  36   2          delay_ms(5000);
  37   2        }
  38   1      }
  39          
  40          /**
  41           * FUNCTION_PURPOSE:LCD Initialization
  42           * FUNCTION_INPUTS: void
  43           * FUNCTION_OUTPUTS: none
  44           */
  45          void LCD_Init()
  46          {
  47   1        sdelay(100);
  48   1        LCD_CmdWrite(0x38);     // LCD 2lines, 5*7 matrix
  49   1        LCD_CmdWrite(0x0E);     // Display ON cursor ON  Blinking off
  50   1        LCD_CmdWrite(0x01);     // Clear the LCD
  51   1        LCD_CmdWrite(0x80);     // Cursor to First line First Position
  52   1      }
  53          
  54          /**
C51 COMPILER V9.54   LCD                                                                   09/13/2015 15:31:37 PAGE 2   

  55           * FUNCTION_PURPOSE: Write Command to LCD
  56           * FUNCTION_INPUTS: cmd- command to be written
  57           * FUNCTION_OUTPUTS: none
  58           */
  59          void LCD_CmdWrite(char cmd)
  60          {
  61   1        LCD_Ready();
  62   1        LCD_data=cmd;           // Send the command to LCD
  63   1        LCD_rs=0;               // Select the Command Register by pulling LCD_rs LOW
  64   1        LCD_rw=0;               // Select the Write Operation  by pulling RW LOW
  65   1        LCD_en=1;               // Send a High-to-Low Pulse at Enable Pin
  66   1        sdelay(5);
  67   1        LCD_en=0;
  68   1        sdelay(5);
  69   1      }
  70          
  71          /**
  72           * FUNCTION_PURPOSE: Write Command to LCD
  73           * FUNCTION_INPUTS: dat- data to be written
  74           * FUNCTION_OUTPUTS: none
  75           */
  76          void LCD_DataWrite( char dat)
  77          {
  78   1        LCD_Ready();
  79   1        LCD_data=dat;           // Send the data to LCD
  80   1        LCD_rs=1;               // Select the Data Register by pulling LCD_rs HIGH
  81   1        LCD_rw=0;               // Select the Write Operation by pulling RW LOW
  82   1        LCD_en=1;               // Send a High-to-Low Pusle at Enable Pin
  83   1        sdelay(5);
  84   1        LCD_en=0;
  85   1        sdelay(5);
  86   1      }
  87          /**
  88           * FUNCTION_PURPOSE: Write a string on the LCD Screen
  89           * FUNCTION_INPUTS: 1. str - pointer to the string to be written, 
  90                              2. length - length of the array
  91           * FUNCTION_OUTPUTS: none
  92           */
  93          void LCD_WriteString( char * str, unsigned char length)
  94          {
  95   1          while(length>0)
  96   1          {
  97   2              LCD_DataWrite(*str);
  98   2              str++;
  99   2              length--;
 100   2          }
 101   1      }
 102          
 103          /**
 104           * FUNCTION_PURPOSE: To check if the LCD is ready to communicate
 105           * FUNCTION_INPUTS: void
 106           * FUNCTION_OUTPUTS: none
 107           */
 108          void LCD_Ready()
 109          {
 110   1        LCD_data = 0xFF;
 111   1        LCD_rs = 0;
 112   1        LCD_rw = 1;
 113   1        LCD_en = 0;
 114   1        sdelay(5);
 115   1        LCD_en = 1;
 116   1        while(LCD_busy == 1)
C51 COMPILER V9.54   LCD                                                                   09/13/2015 15:31:37 PAGE 3   

 117   1        {
 118   2          LCD_en = 0;
 119   2          LCD_en = 1;
 120   2        }
 121   1        LCD_en = 0;
 122   1      }
 123          
 124          /**
 125           * FUNCTION_PURPOSE: A delay of 15us for a 24 MHz crystal
 126           * FUNCTION_INPUTS: void
 127           * FUNCTION_OUTPUTS: none
 128           */
 129          void sdelay(int delay)
 130          {
 131   1        char d=0;
 132   1        while(delay>0)
 133   1        {
 134   2          for(d=0;d<5;d++);
 135   2          delay--;
 136   2        }
 137   1      }
 138          
 139          /**
 140           * FUNCTION_PURPOSE: A delay of around 1000us for a 24MHz crystel
 141           * FUNCTION_INPUTS: void
 142           * FUNCTION_OUTPUTS: none
 143           */
 144          void delay_ms(int delay)
 145          {
 146   1        int d=0;
 147   1        while(delay>0)
 148   1        {
 149   2          for(d=0;d<382;d++);
 150   2          delay--;
 151   2        }
 152   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    222    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
